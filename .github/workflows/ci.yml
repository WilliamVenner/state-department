name: ci

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  validation:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable, beta]
        features: ["--all-features", ""]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.toolchain }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy, rustfmt

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Commune with clippy
        run: cargo clippy --all ${{ matrix.features }} -- -D warnings

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run test suite
        run: cargo test ${{ matrix.features }}

      - name: Check docs
        env:
          RUSTDOCFLAGS: -Dwarnings
        run: cargo doc --all --no-deps ${{ matrix.features }}

  miri:
    strategy:
      matrix:
        features: ["--all-features", ""]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: miri rust-src

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Run miri
        run: cargo miri test ${{ matrix.features }}
